We are not changing the value of x in the first example. Since integers are 32-bits wide, and shift distance is always in the range 0-31 **, the bit position "index"
wraps around to the beginning of x. Thus, the bit position is 0 on the 32nd iteration.

In the second example, we are changing the value of x by shifting bits on each iteration. On iteration six, x becomes 0. Every subsequent iteration pads x with 0. Hence, x's value is 0 until the
end of the loop.
**Source:https: //docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.19
